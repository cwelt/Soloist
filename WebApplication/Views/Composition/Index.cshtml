@model CW.Soloist.WebApplication.ViewModels.CompositionParamsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<div class="panel panel-success">
    <div class="panel-heading text-center"><h4>Composition Form</h4></div>
    <div class="panel-body">
        @using (Html.BeginForm("Compose", "Composition"))
        {

            <div class="form-group">
                @Html.LabelFor(m => m.SongId)
                <div>
                    @Html.DropDownListFor(m => m.SongId, Model.SongSelectList, new { @class = "form-control" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(m => m.CompositionStrategy)
                <div>
                    @Html.EnumDropDownListFor(m => m.CompositionStrategy, "Select Composition Algorithm", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CompositionStrategy)
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(m => m.MusicalInstrument)
                <div>
                    @Html.EnumDropDownListFor(m => m.MusicalInstrument, "Select Musical Instrument", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MusicalInstrument)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.OverallNoteDurationFeel)
                <div>
                    @Html.EnumDropDownListFor(m => m.OverallNoteDurationFeel, "Select Overall Feel", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.OverallNoteDurationFeel)
                </div>
            </div>

            <div class="form-row form-group">
                <div class="col-md-2 left">
                    @Html.LabelFor(m => m.MinPitch)
                    @Html.EnumDropDownListFor(m => m.MinPitch, "Select Minimum Pitch", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MinPitch)
                </div>

                <div class="col-md-2">
                    @Html.LabelFor(m => m.MaxPitch)
                    @Html.EnumDropDownListFor(m => m.MaxPitch, "Select Maximum Pitch", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MaxPitch)
                </div>
            </div>

            <div class="checkbox row">
                <div>
                    <label class="row">
                        @Html.CheckBoxFor(m => m.useExistingMelodyAsSeed) Use Existing Melody As Seed?
                    </label>
                </div>
            </div>

            <div class="text-center">
                @Html.AntiForgeryToken()
                <input class="btn btn-success" type="submit" value="Compose!" />
            </div>

        }

    </div>
</div>

@* Client Side Validations *@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

