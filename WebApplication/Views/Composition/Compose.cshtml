@model CW.Soloist.WebApplication.ViewModels.CompositionParamsViewModel

<div class="panel panel-primary">
    <div class="panel-heading text-center"><h2>Composition Form</h2></div>
    <div class="panel-body">
        @using (Html.BeginForm("Compose", "Composition"))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.SongId)
                @Html.DropDownListFor(m => m.SongId, Model.SongSelectList, new { @class = "form-control" })
                <div class="alert-danger">
                    @Html.ValidationMessageFor(m => m.SongId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MusicalInstrument)
                @Html.EnumDropDownListFor(m => m.MusicalInstrument, new { @class = "form-control" })
                <div class="alert-danger">
                    @Html.ValidationMessageFor(m => m.MusicalInstrument)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.OverallNoteDurationFeel)
                <div>
                    @Html.EnumDropDownListFor(m => m.OverallNoteDurationFeel, new { @class = "form-control" })
                    <div class="alert-danger">
                        @Html.ValidationMessageFor(m => m.OverallNoteDurationFeel)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MinPitch)
                @Html.DropDownListFor(m => m.MinPitch, Model.PitchSelectList, new { @class = "form-control" })
                <div class="alert-danger">
                    @Html.ValidationMessageFor(m => m.MinPitch)
                </div>

                @Html.LabelFor(m => m.MaxPitch)
                @Html.DropDownListFor(m => m.MaxPitch, Model.PitchSelectList, new { @class = "form-control" })
                <div class="alert-danger">
                    @Html.ValidationMessageFor(m => m.MaxPitch)
                </div>
            </div>

            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => m.useExistingMelodyAsSeed) Use Existing Melody As Seed?
                    <span class="alert-danger">
                        @Html.ValidationMessageFor(m => m.useExistingMelodyAsSeed)
                    </span>
                </label>
            </div>

            <div class="text-center">
                <input class="btn btn-success" type="submit" value="Compose!" />
            </div>

            @* Generate hidden form with cookie for client to check against
            when submitting the form in order to protect him from cross-
            site request forgery (CSRF) attakcs. *@
            @Html.AntiForgeryToken()
        }
    </div>
</div>

@* Enable Client Side Validations with JQuery of the Constraints Defined
    in the Data Annotation Attribiutes in the Model Class.  *@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

