@model SongViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Save a new song</h2>

@using (Html.BeginForm(
    actionName: "Create",
    controllerName: "Songs",
    method: FormMethod.Post,
    htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "Please fix the following errors.", new { @class = "text-danger" })

    <!-- Song Title -->
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
    </div>

    <!-- Song Artist -->
    <div class="form-group">
        @Html.LabelFor(m => m.Artist, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Artist, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Artist, "", new { @class = "text-danger" })
    </div>

    <!-- MIDI File Upload -->
<div class="form-group">
    @Html.LabelFor(expression: m => m.MidiFile, htmlAttributes: new { @for = "midiFile", @class = "control-label" })
    @Html.TextBoxFor(m => m.MidiFile, new { type = "file", @class = "form-control-file", accept = ".mid"})
    @Html.ValidationMessageFor(m => m.MidiFile, "", new { @class = "text-danger" })
</div>

    <!-- Chord Progression File Upload -->
<div class="form-group">
    @Html.LabelFor(m => m.ChordProgressionFile, new { @for = "chordsFile", @class = "control-label" })
    @Html.TextBoxFor(m => m.ChordProgressionFile, new { type = "file", @class = "form-control-file", accept = ".txt" })
    @Html.ValidationMessageFor(m => m.ChordProgressionFile, "", new { @class = "text-danger" })
</div>


    <!-- Save Button -->
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary btn-lg btn-block center-block" />
    </div>
}

<!-- Song Index Redirection -->
<div>
    @Html.ActionLink("Back to songs list", "Index")
</div>


